name: Swift Build and Debug Release

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: macos-15

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: 16.4

    - name: Install xcpretty
      run: |
        gem install xcpretty

    - name: Build Debug
      run: |
        xcodebuild -scheme AirSync -configuration Debug clean build CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO

    - name: Build Release
      run: |
        xcodebuild -scheme AirSync -configuration Release clean build CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO

    - name: Archive Debug Build Artifacts
      if: success()
      run: |
        BUILD_DIR=$(xcodebuild -scheme AirSync -configuration Debug -showBuildSettings CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO | grep -m 1 BUILD_DIR | awk '{print $3}')
        echo "Build directory: $BUILD_DIR"
        ls -la "$BUILD_DIR" || echo "Build directory not found"
        if [ -d "$BUILD_DIR/Debug" ]; then
          mkdir -p build-artifacts/Debug
          cp -R "$BUILD_DIR/Debug/"* build-artifacts/Debug/
          echo "Debug artifacts archived successfully"
        else
          echo "Debug build directory not found, skipping artifact archiving"
        fi
      shell: bash

    - name: Archive Release Build Artifacts
      if: success()
      run: |
        BUILD_DIR=$(xcodebuild -scheme AirSync -configuration Release -showBuildSettings CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO | grep -m 1 BUILD_DIR | awk '{print $3}')
        echo "Build directory: $BUILD_DIR"
        ls -la "$BUILD_DIR" || echo "Build directory not found"
        if [ -d "$BUILD_DIR/Release" ]; then
          mkdir -p build-artifacts/Release
          cp -R "$BUILD_DIR/Release/"* build-artifacts/Release/
          echo "Release artifacts archived successfully"
        else
          echo "Release build directory not found, skipping artifact archiving"
        fi
      shell: bash

    - name: Upload Debug Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: AirSync-Debug
        path: build-artifacts/Debug

    - name: Upload Release Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: AirSync-Release
        path: build-artifacts/Release
